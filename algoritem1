class Elevator:
    def __init__(self, id, speed, minFloor, maxFloor, closeTime, openTime, startTime, stopTime , sperFloose: int = 0 ,arr):
        self.id = id
        self.speed = speed
        self.minFloor = minFloor
        self.maxFloor = maxFloor
        self.closeTime = closeTime
        self.openTime = openTime
        self.startTime = startTime
        self.stopTime = stopTime
        self.position = 0
        self.callsQueue=[]
        self.perFloose = perFloose
        self.arr[] = arr[]

        int perFloose

        **def perFloose(Elevator):
        for(int i = 0 to all Elevator i++){
        Elevator[i].perFloose=(i.speed)/(floor_a-floor_b) // maybe not goot because if there are 70 floors and speed is 3 it is 3\70 whats the kesher
           for (int i = minFloor to maxFloor){
           arr += perFloose
           }
        }

        //
        Elevator0 [0,5,10,15,20..........]
        Elevator1 [0,3,6,9,12..........]
        Elevator2 [0,6,12,18,..........]
        ..
        ...
        Elevator9 [0,5,10,15,20..........]
        //

        **def algoritem(calls):

        if (call.source < calls.destination){
         up()
        }

        if (call.source > calls.destination){
        down()
        }

        **def whereIam?(calls):
        for(int i = source to destination i++){
            arr[i]
        }


        **def up(calls):
        for (int i = source to arr.length-source ,i++){
        arr[i] +=  i.startTime + i.stopTime + i.openTime
        }
        return arr

        **def down(calls):
        for (int i = source to 0 ,i--){
        arr[1] +=  i.startTime + i.stopTime + i.openTime + whtintime
        }
        return arr



        def curentFloor(call):

        for (int i to maxFloor)
        i.curentFloor = (i.speed*maxFloor)/(maxFloor - minFloor)//secends from floor 0 to 100
        arr [i] = i.curentFloor

        def stop:

        if (stop)
          r  for (int i to arr)
            i.curentFloor += i.startTime + i.stopTime + i.openTime//if elevtor stop reset arr
            arr [i] = i.curentFloo

    def up(Elevator):

    def down(Elevator):

